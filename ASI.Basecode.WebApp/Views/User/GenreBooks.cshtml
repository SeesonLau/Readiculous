@{
    Layout = null;
}
@model List<ASI.Basecode.WebApp.Models.BookViewModel>

@{
    ViewData["Title"] = "Genre Books";
    var genre = ViewBag.SelectedGenre as string;
    var filterType = ViewBag.FilterType as string ?? "Top";
    var filterOption = ViewBag.FilterOption as string ?? "High Rating";
    var displayTitle = !string.IsNullOrEmpty(genre) ? $"{filterType.ToUpper()} - {genre.ToUpper()}" : "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Readiculous - Genre Books</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="@Url.Content("~/css/style.css")" />
</head>
<body>
    <!-- NAVIGATION -->
    <header class="navbar">
        <div class="logo-group" onclick="location.reload()">
            <img src="@Url.Content("~/img/png-logo.png")" alt="Logo" class="logo-icon" />
            <h1 class="team-name">Readiculous</h1>
        </div>
        <nav class="nav-links">
            <a href="@Url.Action("UserView", "User")"><span>📖</span> New Books</a>
            <a href="@Url.Action("UserView", "User")"><span>🏆</span> Top Books</a>
            <a href="@Url.Action("GenreBooks", "User")" class="nav-link"><span>🏷️</span> Genre</a>
            <a href="#" onclick="toggleAuthModal()"><span>👤</span></a>
        </nav>
    </header>

    <!-- MAIN CONTENT -->
    <div class="container mt-4">
        <main class="content-container">
            <input type="text" class="book-search" placeholder="🔍 Book Search..." />

            <!-- FILTER PANEL -->
            <div class="border rounded p-3 bg-light shadow-sm mb-4">
                <div class="row align-items-center">
                    <!-- GENRE DROPDOWN -->
                    <div class="col-md-6">
                        <form method="get" action="@Url.Action("GenreBooks", "Books")">
                            <label class="fw-bold">Genres</label>
                            <select name="genre" class="form-select w-100" onchange="this.form.submit()">
                                <option disabled selected>Select Genre</option>
                                @foreach (var g in new[] { "Fiction", "Sci-Fi", "Romance", "Mystery", "Drama", "Fantasy", "Comedy", "Thriller" })
                                {
                                    <option value="@g" selected="@(genre == g ? "selected" : null)">@g</option>
                                }
                            </select>
                            <input type="hidden" name="filterType" value="@filterType" />
                            <input type="hidden" name="filterOption" value="@filterOption" />
                        </form>
                    </div>

                    <!-- FILTER BUTTONS -->
                    <div class="col-md-6 d-flex justify-content-end">
                        <div class="btn-group me-2">
                            <a href="@Url.Action("GenreBooks", new { genre = genre, filterType = "Top", filterOption = filterOption })"
                               class="btn btn-outline-primary @(filterType == "Top" ? "active" : "")">Top</a>
                            <a href="@Url.Action("GenreBooks", new { genre = genre, filterType = "New", filterOption = filterOption })"
                               class="btn btn-outline-primary @(filterType == "New" ? "active" : "")">New</a>
                        </div>

                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                @filterOption
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li>
                                    <a class="dropdown-item" href="@Url.Action("GenreBooks", new { genre = genre, filterType = filterType, filterOption = "High Rating" })">High Rating</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="@Url.Action("GenreBooks", new { genre = genre, filterType = filterType, filterOption = "Latest Book" })">Latest Book</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- SECTION TITLE (only if genre selected) -->
            @if (!string.IsNullOrEmpty(genre))
            {
                <div class="text-center mt-4">
                    <h4 class="border p-2 bg-white d-inline-block shadow-sm">@displayTitle</h4>
                </div>

                <!-- BOOK LIST -->
                <div class="row row-cols-2 row-cols-md-5 g-4 mt-3">
                    @if (Model != null && Model.Any())
                    {
                        var topBooks = Model.Take(5);
                        var bottomBooks = Model.Skip(Math.Max(Model.Count - 5, 0));

                        foreach (var book in topBooks.Concat(bottomBooks))
                        {
                            <div class="col">
                                <div class="card h-100 shadow-sm">
                                    <img src="@Url.Content("~/img/Book/" + book.ImagePath)" class="card-img-top" alt="@book.Title Cover">
                                    <div class="card-body">
                                        <h6 class="card-title">@book.Title</h6>
                                        <p class="card-text small">@book.Author, @book.Year</p>
                                        <div class="text-warning small">
                                            @{
                                                int stars = (int)Math.Floor(book.Rating);
                                                int empty = 5 - stars;
                                            }
                                            @for (int i = 0; i < stars; i++) { <span>&#9733;</span> }
                                            @for (int i = 0; i < empty; i++) { <span class="text-muted">&#9733;</span> }
                                            <span class="text-dark">(@book.Rating.ToString("0.0"))</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12 text-center">
                            <p class="text-muted">No books available for this genre.</p>
                        </div>
                    }
                </div>
            }
        </main>
    </div>
    @Html.Partial("_AuthModal")
    <script src="~/js/landing.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>