@{
    Layout = null;
}
@model dynamic

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Readiculous - User View</title>
    <link rel="stylesheet" href="@Url.Content("~/css/style.css")" />
    <style>
        html {
            scroll-behavior: smooth;
        }
    </style>
</head>
<body>
    <header class="navbar">
        <div class="logo-group" onclick="location.reload()">
            <img src="@Url.Content("~/img/png-logo.png")" alt="Logo" class="logo-icon" />
            <h1 class="team-name">Readiculous</h1>
        </div>
        <nav class="nav-links">
            <a href="@Url.Action("UserView", "UserTest")#new-books">📖 New Books</a>
            <a href="@Url.Action("UserView", "UserTest")#top-books">🏆 Top Books</a>
            <a href="@Url.Action("GenreBooks", "BookTest")"><span>🏷️</span> Genre</a>
            <a href="#" onclick="toggleAuthModal()">👤</a>
        </nav>
    </header>

    <main class="content-container">
        <input type="text" class="book-search" placeholder="🔍 Book Search..." />
        <!-- NEW BOOKS Section -->
        <section id="new-books" class="section-box">
            <div class="section-header-box">
                <h2 class="section-title">New Books</h2>
                <a class="view-more-link" href="@Url.Action("ViewNewBooks", "Usertest")">View More</a>
            </div>
            <div class="book-grid">
                @if (ViewBag.NewBooks != null)
                {
                    foreach (var book in ViewBag.NewBooks as List<ASI.Basecode.Data.Models.BookTest>)
                    {
                        <div class="book-card" onclick="location.href='@Url.Action("BookDetails", "UserTest", new { id = book.Id })'">
                            <img src="@Url.Content("~/img/Book/" + book.ImagePath)" alt="@book.Title Cover" class="book-cover" />
                            <div class="book-meta">
                                <strong>@book.Title</strong><br />
                                @book.Author, @book.Year
                                <div class="book-rating">
                                    @{
                                        int stars = (int)Math.Floor(book.Rating);
                                        int empty = 5 - stars;
                                    }
                                    @for (int i = 0; i < stars; i++)
                                    {
                                        <span style="color: gold;">&#9733;</span>
                                    }
                                    @for (int i = 0; i < empty; i++)
                                    {
                                        <span style="color: lightgray;">&#9733;</span>
                                    }
                                    <span class="rating-number">(@book.Rating.ToString("0.0"))</span>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No new books found.</p>
                }
            </div>
        </section>
        <!-- TOP BOOKS Section -->
        <section id="top-books" class="section-box">
            <div class="section-header-box">
                <h2 class="section-title">Top Books</h2>
                <a class="view-more-link" href="@Url.Action("ViewTopBooks", "UserTest")">View More</a>
            </div>
            <div class="book-grid">
                @if (ViewBag.TopBooks != null)
                {
                    foreach (var book in ViewBag.TopBooks as List<ASI.Basecode.Data.Models.BookTest>)
                    {
                        <div class="book-card" onclick="location.href='@Url.Action("BookDetails", "UserTest", new { id = book.Id })'">
                            <img src="@Url.Content("~/img/Book/" + book.ImagePath)" alt="@book.Title Cover" class="book-cover" />
                            <div class="book-meta">
                                <strong>@book.Title</strong><br />
                                @book.Author, @book.Year
                                <div class="book-rating">
                                    @{
                                        int stars = (int)Math.Floor(book.Rating);
                                        int empty = 5 - stars;
                                    }
                                    @for (int i = 0; i < stars; i++)
                                    {
                                        <span style="color: gold;">&#9733;</span>
                                    }
                                    @for (int i = 0; i < empty; i++)
                                    {
                                        <span style="color: lightgray;">&#9733;</span>
                                    }
                                    <span class="rating-number">(@book.Rating.ToString("0.0"))</span>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No top books found.</p>
                }
            </div>
        </section>
    </main>
    @Html.Partial("_AuthModal")
    <script src="@Url.Content("~/js/landing.js")"></script>
</body>
</html>
