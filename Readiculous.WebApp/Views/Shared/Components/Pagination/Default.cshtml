@model Readiculous.WebApp.Models.PaginationModel
@using Microsoft.AspNetCore.Routing
@{
    // Retrieve action and controller from ViewData
    var action = ViewData["action"]?.ToString() ?? "Index";
    var controller = ViewData["controller"]?.ToString() ?? "Home";

    var routeValues = new RouteValueDictionary
    {
        ["pageSize"] = Model.PageSize
    };

    // Add optional parameters if they exist
    if (ViewData["routeId"] != null)
    {
        routeValues["id"] = ViewData["routeId"];
    }
    if (ViewData["routeBookSearch"] != null)
    {
        routeValues["bookSearch"] = ViewData["routeBookSearch"];
    }
    if (ViewData["searchString"] != null)
    {
        routeValues["searchString"] = ViewData["searchString"];
    }
    if (ViewData["searchType"] != null)
    {
        routeValues["searchType"] = ViewData["searchType"];
    }
}

<div class="pagination-container">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mb-0">
            <li class="page-item @(!Model.HasPrevious ? "disabled" : "")">
                @{
                    routeValues["page"] = 1;
                }
                <a class="page-link" href="@Url.Action(action, controller, routeValues)" data-page="1" aria-label="First">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li class="page-item @(!Model.HasPrevious ? "disabled" : "")">
                @{
                    routeValues["page"] = Model.CurrentPage - 1;
                }
                <a class="page-link" href="@Url.Action(action, controller, routeValues)" data-page="@(Model.CurrentPage - 1)" aria-label="Previous">
                    <span aria-hidden="true">&lsaquo;</span>
                </a>
            </li>

            <li class="page-item">
                <a class="page-link jump-to-page" href="#" data-bs-toggle="modal" data-bs-target="#jumpToPageModal">
                    @Model.CurrentPage of @Model.TotalPages
                </a>
            </li>

            <li class="page-item @(!Model.HasNext ? "disabled" : "")">
                @{
                    routeValues["page"] = Model.CurrentPage + 1;
                }
                <a class="page-link" href="@Url.Action(action, controller, routeValues)" data-page="@(Model.CurrentPage + 1)" aria-label="Next">
                    <span aria-hidden="true">&rsaquo;</span>
                </a>
            </li>
            <li class="page-item @(!Model.HasNext ? "disabled" : "")">
                @{
                    routeValues["page"] = Model.TotalPages;
                }
                <a class="page-link" href="@Url.Action(action, controller, routeValues)" data-page="@Model.TotalPages" aria-label="Last">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

<!-- Jump to Page Modal -->
<div class="modal fade" id="jumpToPageModal" tabindex="-1" aria-labelledby="jumpToPageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content" style="width: 250px; margin: 0 auto;">
            <div class="modal-header py-2">
                <h5 class="modal-title fs-6" id="jumpToPageModalLabel">Jump to Page</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body py-2">
                <div class="mb-2">
                    <label for="pageNumberInput" class="form-label small">Page (1 - @Model.TotalPages)</label>
                    <input type="number" class="form-control form-control-sm" id="pageNumberInput" min="1" max="@Model.TotalPages">
                    <div id="pageNumberError" class="invalid-feedback small"></div>
                </div>
            </div>
            <div class="modal-footer py-2">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-sm btn-primary" id="confirmJumpToPage">OK</button>
            </div>
        </div>
    </div>
</div>