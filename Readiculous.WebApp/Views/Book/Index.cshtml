@using X.PagedList
@model X.PagedList.IPagedList<Readiculous.Services.ServiceModels.BookListItemViewModel>

@{
    ViewData["Title"] = "Book Management";
    var selectedGenres = ViewBag.Genres as List<Readiculous.Services.ServiceModels.GenreViewModel>;

    var queryParams = new
    {
        searchString = ViewData["CurrentFilter"],
        sortOrder = ViewData["CurrentSortOrder"],
        searchType = ViewData["CurrentSearchType"],
        selectedGenreIds = ViewBag.SelectedGenreIds,
    };
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/modal-styles.css" />
}

<h1>Book Management</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Book</a>
</p>

<div class="modal fade" id="addReviewModal" tabindex="-1" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content" id="reviewModalContent">
            <!-- AJAX-loaded content goes here -->
        </div>
    </div>
</div>

<!-- Search and Filter Form -->
<form asp-action="Index" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4 mb-3">
            <label for="searchString" class="form-label">Search Book Title:</label>
            <input type="text" name="searchString" class="form-control" placeholder="Enter book title"
                   value="@ViewData["CurrentFilter"]" />
        </div>

        <div class="col-md-3 mb-3">
            <label for="searchType" class="form-label">Search Type:</label>
            <select name="searchType" class="form-control" asp-items="@ViewBag.BookSearchTypes"></select>
        </div>

        <div class="col-md-3 mb-3">
            <label for="sortOrder" class="form-label">Sort By:</label>
            <select name="sortOrder" class="form-control" asp-items="@ViewBag.BookSortTypes"></select>
        </div>

        <div class="col-md-2 d-flex align-items-end mb-3">
            <button type="submit" class="btn btn-primary me-2">Search</button>
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </div>
    </div>

    <!-- Genre checkboxes -->
    @if (ViewBag.AllGenres is List<Readiculous.Services.ServiceModels.GenreViewModel> allGenres && allGenres.Any())
    {
        var selectedGenreIds = ViewBag.SelectedGenreIds as List<string> ?? new List<string>();

        <div class="mb-3">
            <label class="form-label">Filter by Genre:</label>
            <div class="row">
                @for (int i = 0; i < allGenres.Count; i++)
                {
                    var genre = allGenres[i];
                    var isChecked = selectedGenreIds.Contains(genre.GenreId);

                    <div class="col-md-3">
                        <div class="form-check">
                            <input type="checkbox" name="selectedGenreIds" value="@genre.GenreId"
                                   class="form-check-input" @(isChecked ? "checked" : "") />
                            <label class="form-check-label">@genre.Name</label>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</form>

<!-- Books Table -->
<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Cover</th>
            <th>Title</th>
            <th>Author</th>
            <th>Genres</th>
            <th>Publication Year</th>
            <th>Rating</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.CoverImageUrl))
                    {
                        <img src="@item.CoverImageUrl" alt="Cover" width="50" height="75" />
                    }
                    else
                    {
                        <span class="text-muted">No Image</span>
                    }
                </td>
                <td>@item.Title</td>
                <td>@item.Author</td>
                <td>
                    @if (item.Genres.Any())
                    {
                        @string.Join(", ", item.Genres.OrderBy(g => g))
                    }
                    else
                    {
                        <span class="text-muted">No genres</span>
                    }
                </td>
                <td>@item.PublicationYear</td>
                <td>@item.AverageRating.ToString("0.0")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BookId" class="btn btn-sm btn-info">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BookId" class="btn btn-sm btn-info">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.BookId" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }

        @if (!Model.Any())
        {
            <tr>
                <td colspan="7" class="text-center text-muted">No books found matching your criteria.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@if(Model.Count > 0)
{
    <div style="text-align: center;">
        <div class="pagination" style="display: inline-block; margin-bottom:20px">
                @if (Model.HasPreviousPage)
                {
                    <a href="@Url.Action("Index", new { searchString = ViewData["CurrentSearchString"], genres = ViewBag.SelectedGenreIds, sortOrder = ViewData["CurrentSortOrder"], pageNumber = Model.PageNumber - 1 })" style="text-decoration: none; margin: 0 5px;">&lt; Prev</a>
                }
                else
                {
                    <span class="disabled" style="margin: 0 5px; color: #ccc;">&lt; Prev</span>
                }

                <span style="margin: 0 5px;">Page @Model.PageNumber of @Model.PageCount</span>

                @if (Model.HasNextPage)
                {
                    string type = ViewBag.Type;
                <a href="@Url.Action("Index", new { searchString = ViewBag.SearchString, genres = ViewBag.SelectedGenreIds, sortOrder = ViewBag.BookSortTypes, pageNumber = Model.PageNumber + 1 })" style="text-decoration: none; margin: 0 5px;">Next &gt;</a>
                }
                else
                {
                    <span class="disabled" style="margin: 0 5px; color: #ccc;">Next &gt;</span>
                }

        </div>
    </div>
}

@section Scripts {
    <script src="~/js/review/review.js"></script>
    <script>
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage, 'Error');
        }
    </script>
}
