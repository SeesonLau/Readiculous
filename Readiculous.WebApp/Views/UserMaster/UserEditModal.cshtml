@using static Readiculous.Resources.Constants.Enums
@model Readiculous.Services.ServiceModels.UserViewModel

<form id="editUserForm" asp-action="Edit" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="UserId" />
    <input type="hidden" asp-for="CreatedBy" />
    <input type="hidden" asp-for="CreatedTime" />
    <input type="hidden" asp-for="Password" id="originalPassword" />
    <input type="hidden" asp-for="ProfilePictureUrl" />

    <div class="form-group">
        <label asp-for="Username" class="form-label">Username</label>
        <input asp-for="Username" class="form-control" />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email" class="form-label">Email</label>
        <input asp-for="Email" class="form-control" readonly />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Password" class="form-label">New Password</label>
        <div class="password-input-group">
            <input asp-for="Password"
                   class="form-control"
                   type="password"
                   autocomplete="new-password"
                   placeholder="Leave blank to keep current password"
                   id="editPassword" />
            <button type="button"
                    class="password-toggle"
                    onclick="togglePassword('editPassword', this)"
                    aria-label="Toggle password visibility"
                    aria-pressed="false">
                <i class="fas fa-eye-slash"></i>
            </button>
        </div>
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Role" class="form-label">Role</label>
        <select asp-for="Role" class="form-select">
            <option value="@RoleType.Admin">Admin</option>
            <option value="@RoleType.Reviewer">Reviewer</option>
        </select>
        <span asp-validation-for="Role" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label class="form-label">Profile Picture</label>
        <div class="profile-picture-container">
            <div class="profile-picture-preview">
                @if (!string.IsNullOrEmpty(Model.ProfilePictureUrl))
                {
                    <img src="@Model.ProfilePictureUrl" alt="Profile Picture" class="profile-picture-preview" id="currentProfilePicture" />
                }
                else
                {
                    <div class="profile-picture-placeholder">No image available</div>
                }
            </div>

            @if (!string.IsNullOrEmpty(Model.ProfilePictureUrl))
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" asp-for="RemoveProfilePicture" id="removeProfilePicture">
                    <label class="form-check-label" for="removeProfilePicture">
                        Remove profile picture
                    </label>
                </div>
            }

            <input asp-for="ProfilePicture" type="file" class="form-control" accept=".png,.jpg,.jpeg" id="newProfilePicture" />
        </div>
        <span asp-validation-for="ProfilePicture" class="text-danger"></span>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</form>

<script src="~/js/adminUserMaster/usermasterModal.js" asp-append-version="true"></script>
