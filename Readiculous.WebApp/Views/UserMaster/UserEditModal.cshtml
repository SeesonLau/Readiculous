@using static Readiculous.Resources.Constants.Enums
@model Readiculous.Services.ServiceModels.UserViewModel

<form id="editUserForm" asp-action="Edit" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="UserId" />
    <input type="hidden" asp-for="CreatedBy" />
    <input type="hidden" asp-for="CreatedTime" />
    <input type="hidden" asp-for="Password" id="originalPassword" /> 
    <input type="hidden" asp-for="ProfilePictureUrl" /> 

    <div class="form-group mb-3">
        <label asp-for="Username" class="form-label"></label>
        <input asp-for="Username" class="form-control" />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Email" class="form-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Password" class="form-label">New Password (leave blank to keep current)</label>
        <input asp-for="Password" class="form-control" type="password" value="" placeholder="Leave blank to keep current password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Role" class="form-label"></label>
        <select asp-for="Role" class="form-control">
            <option value="@RoleType.Admin">Admin</option>
            <option value="@RoleType.Reviewer">Reviewer</option>
        </select>
        <span asp-validation-for="Role" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label class="form-label">Current Profile Picture</label>
        @if (!string.IsNullOrEmpty(Model.ProfilePictureUrl))
        {
            <div class="mb-2">
                <img src="@Model.ProfilePictureUrl" alt="Profile Picture" style="max-width: 200px; max-height: 200px;" class="img-thumbnail" id="currentProfilePicture" />
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" asp-for="RemoveProfilePicture" id="removeProfilePicture">
                <label class="form-check-label" for="removeProfilePicture">
                    Remove profile picture
                </label>
            </div>
        }
        else
        {
            <p class="text-muted">No profile picture available</p>
        }
    </div>

    <div class="form-group mb-3">
        <label asp-for="ProfilePicture" class="form-label">Upload New Profile Picture (leave blank to keep current)</label>
        <input asp-for="ProfilePicture" type="file" class="form-control" accept=".png,.jpg,.jpeg" id="newProfilePicture" />
        <span asp-validation-for="ProfilePicture" class="text-danger"></span>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Save Changes</button>
    </div>
</form>

<!--<script src="~/js/adminUserMaster/editUserMaster.js"></script>-->



<script>
    document.addEventListener('DOMContentLoaded', function() {
        const removeCheckbox = document.getElementById('removeProfilePicture');
        const fileInput = document.getElementById('newProfilePicture');

        if (removeCheckbox && fileInput) {
            // When a new file is selected, uncheck the remove checkbox
            fileInput.addEventListener('change', function() {
                if (this.files.length > 0) {
                    removeCheckbox.checked = false;
                }
            });

            // When remove is checked, clear the file input
            removeCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    fileInput.value = '';
                }
            });
        }
    });
</script>

