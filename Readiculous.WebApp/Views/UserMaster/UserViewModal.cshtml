@model Readiculous.Services.ServiceModels.UserDetailsViewModel
@using System;

<div class="user-view-container">
    <h4 class="user-view-title">User Profile</h4>
    <hr class="user-view-divider" />

    <div class="user-view-profile-section">
        <div class="user-view-profile-picture">
            @if (!string.IsNullOrEmpty(Model.ProfileImageUrl))
            {
                <img src="@Model.ProfileImageUrl" alt="Profile Picture" class="user-view-profile-img" />
            }
            else
            {
                <div class="user-view-profile-placeholder">
                    <i class="fas fa-user-circle"></i>
                    <span>No profile picture</span>
                </div>
            }
        </div>

        <div class="user-view-details">
            <dl class="user-view-details-list">
                <div class="user-view-detail-item">
                    <dt>Username</dt>
                    <dd>@Html.DisplayFor(model => model.UserName)</dd>
                </div>

                <div class="user-view-detail-item">
                    <dt>Email Address</dt>
                    <dd>@Html.DisplayFor(model => model.Email)</dd>
                </div>

                <div class="user-view-detail-item">
                    <dt>User Role</dt>
                    <dd>
                        <span class="role-badge @Model.Role.ToLower()">@Html.DisplayFor(model => model.Role)</span>
                    </dd>
                </div>
            </dl>
        </div>
    </div>

    <div class="user-view-meta-grid">
        <div class="user-view-meta-group">
            <h5 class="user-view-meta-title">Account Information</h5>
            <dl class="user-view-meta-list">
                <div class="user-view-meta-item">
                    <dt>Created By</dt>
                    <dd>@Html.DisplayFor(model => model.CreatedByUserName)</dd>
                </div>
                <div class="user-view-meta-item">
                    <dt>Date Joined</dt>
                    <dd>@Html.DisplayFor(model => model.CreatedTime)</dd>
                </div>
                <div class="user-view-meta-item">
                    <dt>Last Modified By</dt>
                    <dd>@Html.DisplayFor(model => model.UpdatedByUserName)</dd>
                </div>
                <div class="user-view-meta-item">
                    <dt>Last Modified On</dt>
                    <dd>@Html.DisplayFor(model => model.UpdatedTime)</dd>
                </div>
            </dl>
        </div>

        <div class="user-view-activity-group">
            <h5 class="user-view-meta-title">Reading Activity</h5>
            <div class="user-view-activity-stats">
                <div class="activity-stat">
                    <div class="stat-value">@Model.UserReviewModels.Count</div>
                    <div class="stat-label">Total Reviews</div>
                    <div class="stat-icon">
                        <i class="fas fa-pen-fancy"></i>
                    </div>
                </div>
                <div class="activity-stat">
                    <div class="stat-value">@Model.FavoriteBookModels.Count</div>
                    <div class="stat-label">Favorites</div>
                    <div class="stat-icon">
                        <i class="fas fa-heart"></i>
                    </div>
                </div>
                <div class="activity-stat">
                    <div class="stat-value">@Model.AverageRating</div>
                    <div class="stat-label">Avg Rating</div>
                    <div class="stat-icon">
                        <i class="fas fa-star"></i>
                    </div>
                </div>
                <div class="activity-stat">
                    <div class="stat-value">
                        @if (Model.TopGenres.Any())
                        {
                            foreach (var genre in Model.TopGenres)
                            {
                                <span class="genre-badge">@genre</span>
                            }
                        }
                        else
                        {
                            <span class="no-genre">None</span>
                        }
                    </div>
                    <div class="stat-label">Preferred Genres</div>
                    <div class="stat-icon">
                        <i class="fas fa-tags"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="user-view-footer">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
        <i class="fas fa-times"></i> Close
    </button>
    <button type="button" class="btn btn-primary edit-user" data-userid="@Model.UserId">
        <i class="fas fa-user-edit"></i> Edit Profile
    </button>
</div>

<script src="~/js/adminUserMaster/usermasterModal.js" asp-append-version="true"></script>
