@model IEnumerable<Readiculous.Services.ServiceModels.GenreListItemViewModel>
@using Microsoft.AspNetCore.Mvc.Rendering

@section Styles {
    <link rel="stylesheet" href="~/css/adminGenreMaster/genre-master.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Genre Management";
}

<div class="container-fluid genre-management-container px-0">
    <div class="genre-management-header row mb-4 mx-0 align-items-center">
        <div class="col-md-6 px-0">
            <h1 class="genre-management-title mb-0">Genre Management</h1>
        </div>
        <div class="col-md-6 px-0 text-md-end">
            <button type="button" class="btn btn-success" id="openAddGenreModalBtn">
                <i class="fas fa-plus me-2"></i>Add Genre
            </button>
        </div>
    </div>

    <div class="genre-filter-controls row g-3 align-items-end mx-0 mb-4">
        <div class="filter-group col-md-8 px-0 pe-md-2">
            <label for="searchString" class="filter-label">Search Genre</label>
            <input type="text" id="searchString" name="searchString" class="filter-input"
                   placeholder="Enter genre name" value="@ViewData["CurrentFilter"]" />
        </div>

        <div class="filter-group col-md-4 px-0">
            <label for="searchType" class="filter-label">Sort By</label>
            <select id="searchType" name="searchType" class="filter-input">
                @foreach (var type in (List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)ViewBag.GenreSearchTypes)
                {
                    <option value="@type.Value" selected="@(type.Selected ? "selected" : null)">
                        @type.Text
                    </option>
                }
            </select>
        </div>
    </div>

    <div class="row mx-0">
        <div class="col px-0">
            <div id="genreListContainer" class="genre-table-container">
                @await Html.PartialAsync("_GenreListPartial", Model)
            </div>
        </div>
    </div>

    <div class="pagination-controls row mb-4 mx-0 align-items-center">
        <div class="col-md-6 px-0">
            @if (ViewBag.PaginationModel != null)
            {
                @await Component.InvokeAsync("Pagination", ViewBag.PaginationModel)
            }
        </div>
        <div class="col-md-6 px-0 text-md-end">
            @await Component.InvokeAsync("PageSize", new { currentPageSize = ViewBag.PageSize ?? 10 })
        </div>
    </div>
</div>

<!-- Add Genre Modal -->
<div class="modal fade genre-modal" id="addGenreModal" tabindex="-1" aria-labelledby="addGenreModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addGenreModalLabel">Add New Genre</h5>
            </div>
            <div class="modal-body" id="addGenreModalBody">
                <!-- Content loaded via AJAX -->
            </div>
        </div>
    </div>
</div>

<!-- Edit Genre Modal -->
<div class="modal fade genre-modal" id="editGenreModal" tabindex="-1" aria-labelledby="editGenreModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editGenreModalLabel">Edit Genre</h5>
            </div>
            <div class="modal-body" id="editGenreModalBody">
                <!-- Content loaded via AJAX -->
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/_DeleteModal.cshtml")

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        const genreMasterSettings = {
            genreMasterScreenUrl: '@Url.Action("GenreMasterScreen", "GenreMaster")',
            genreAddModalUrl: '@Url.Action("GenreAddModal", "GenreMaster")',
            genreEditModalUrl: '@Url.Action("GenreEditModal", "GenreMaster")',
            genreViewModalUrl: '@Url.Action("GenreViewPage", "GenreMaster")',
            createGenreUrl: '@Url.Action("Create", "GenreMaster")',
            editGenreUrl: '@Url.Action("Edit", "GenreMaster")',
            deleteGenreUrl: '@Url.Action("Delete", "GenreMaster")'
        };
    </script>
    <script src="~/js/pagination.js"></script>
    <script src="~/js/pageSize.js"></script>
    <script src="~/js/adminGenreMaster/genremasterScreen.js" asp-append-version="true"></script>
}