@{
    Layout = null;
}
@model List<Readiculous.Services.ServiceModels.BookViewModel>

@{
    ViewData["Title"] = "Genre Books";
    var selectedGenres = ViewBag.SelectedGenres as List<string> ?? new List<string>();
    var filterType = ViewBag.FilterType as string ?? "Top";
    var filterOption = ViewBag.FilterOption as string ?? "High Rating";
    var displayTitle = selectedGenres.Any()
        ? $"{filterType.ToUpper()} {string.Join(", ", selectedGenres).ToUpper()}"
        : "ALL BOOKS";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Readiculous - Genre Books</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="@Url.Content("~/css/landing.css")" />
    
</head>
<body>
    <header class="navbar">
        <div class="logo-group" onclick="location.href='@Url.Action("GuestView", "UserView")'">
            <img src="@Url.Content("~/img/png-logo.png")" alt="Logo" class="logo-icon" />
            <h1 class="team-name">Readiculous</h1>
        </div>
        <nav class="nav-links">
            <a href="@Url.Action("GuestView", "UserView")#new-books">📖 New Books</a>
            <a href="@Url.Action("GuestView", "UserView")#top-books">🏆 Top Books</a>
        </nav>
    </header>

    <div class="container mt-4">
        <main class="content-container">
            <form method="get" id="genreForm">
                <div class="border rounded p-3 bg-light shadow-sm mb-4">
                    <div class="row align-items-center">
                        <div class="col-md-6 position-relative">
                            <label class="fw-bold">Genres</label>
                            <button type="button" class="form-select text-start" id="genreToggle">Select genres…</button>
                            <ul class="dropdown-menu w-100 p-3" id="genreMenu">
                                @foreach (var g in new[] { "Fiction", "Sci‑Fi", "Romance", "Mystery", "Drama", "Fantasy", "Psychological", "Thriller" })
                                {
                                    <li>
                                        <div class="form-check">
                                            <input class="form-check-input genre-checkbox" type="checkbox" value="@g" id="chk_@g"
                                            @(selectedGenres.Contains(g) ? "checked" : "")>
                                            <label class="form-check-label" for="chk_@g">@g</label>
                                        </div>
                                    </li>
                                }
                            </ul>
                            <div id="selectedGenresDisplay" class="mt-2">
                                @foreach (var g in selectedGenres)
                                {
                                    <span class="genre-badge">@g</span>
                                }
                            </div>
                        </div>

                        <div class="col-md-6 d-flex justify-content-end">
                            <input type="hidden" name="genres" id="selectedGenresInput" value="@string.Join(",", selectedGenres)" />
                            <input type="hidden" name="filterType" value="@filterType" />
                            <input type="hidden" name="filterOption" value="@filterOption" />

                            <div class="btn-group me-2">
                                <button type="submit" class="btn btn-outline-primary @(filterType == "Top" ? "active" : "")"
                                        onclick="setActionAndSubmit('Top')">
                                    Top
                                </button>
                                <button type="submit" class="btn btn-outline-primary @(filterType == "New" ? "active" : "")"
                                        onclick="setActionAndSubmit('New')">
                                    New
                                </button>
                            </div>

                            <div class="dropdown">
                                <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">@filterOption</button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="#" onclick="event.preventDefault(); setFilter('High Rating')">High Rating</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="event.preventDefault(); setFilter('Latest Book')">Latest Book</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </form>

            <div class="text-center mt-3 mb-4">
                <h4 class="display-title-highlight">@displayTitle</h4>
            </div>

            <!-- Book Display -->
            <div class="row row-cols-2 row-cols-md-5 g-4 mt-3">
                @if (Model != null && Model.Any())
                {
                    foreach (var book in Model.Take(2)) // Show max 2
                    {
                        <div class="col">
                            <div class="card h-100 book-card-hover"
                                 onclick="location.href='@Url.Action("UserBookDetails", "UserView", new { title = book.Title })'">
                                <img src="@book.CoverImageUrl" class="card-img-top" alt="@book.Title" />
                                <div class="card-body">
                                    <h5 class="card-title">@book.Title</h5>
                                    <p class="card-text">@book.Author</p>
                                    <p class="card-text">⭐ @book.Rating</p>
                                </div>
                            </div>
                        </div>
                    }
                }
                else if (!selectedGenres.Any()) // Show default books if no filter & no data
                {
                    <div class="col">
                        <div class="card h-100 book-card-hover"
                             onclick="location.href='@Url.Action("UserBookDetails", "UserView", new { title = "Dune" })'">
                            <img src="@Url.Content("~/img/dune.jpg")" class="card-img-top" alt="Dune" />
                            <div class="card-body">
                                <h5 class="card-title">Dune</h5>
                                <p class="card-text">Frank Herbert</p>
                                <p class="card-text">⭐ 4.7</p>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card h-100 book-card-hover"
                             onclick="location.href='@Url.Action("UserBookDetails", "UserView", new { title = "Circe" })'">
                            <img src="@Url.Content("~/img/circe.jpg")" class="card-img-top" alt="Circe" />
                            <div class="card-body">
                                <h5 class="card-title">Circe</h5>
                                <p class="card-text">Madeline Miller</p>
                                <p class="card-text">⭐ 4.9</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </main>
    </div>

    <script>
        const toggle = document.getElementById("genreToggle"),
              menu = document.getElementById("genreMenu"),
              checkboxes = document.querySelectorAll(".genre-checkbox"),
              hiddenInput = document.getElementById("selectedGenresInput"),
              display = document.getElementById("selectedGenresDisplay"),
              form = document.getElementById("genreForm");

        toggle.addEventListener("click", e => {
            e.stopPropagation();
            menu.classList.toggle("show");
        });

        document.addEventListener("click", e => {
            if (!toggle.contains(e.target)) menu.classList.remove("show");
        });

        checkboxes.forEach(cb => cb.addEventListener("change", () => {
            const selected = Array.from(checkboxes).filter(c => c.checked).map(c => c.value);
            hiddenInput.value = selected.join(",");
            display.innerHTML = selected.map(g => `<span class="genre-badge">${g}</span>`).join("");
            form.submit();
        }));

        function setActionAndSubmit(filterType) {
            event.preventDefault();
            form.action = filterType === 'Top'
                ? '@Url.Action("GenreBooks", "UserView")'
                : '@Url.Action("NewGenreBooks", "UserView")';
            document.querySelector("input[name='filterType']").value = filterType;
            form.submit();
        }

        function setFilter(option) {
            document.querySelector("input[name='filterOption']").value = option;
            form.submit();
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
