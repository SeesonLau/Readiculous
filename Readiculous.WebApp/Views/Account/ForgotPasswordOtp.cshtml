@using Readiculous.Services.ServiceModels
@model OtpVerificationModel
@{
    ViewBag.LoginView = true;
    ViewData["Title"] = "Verify OTP";
}
@section styles {
    <link rel="stylesheet" href="~/css/forgotPassword.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
}
<div class="otp-box-custom">
    <div class="otp-card-custom">
        <div class="otp-icon">
            <i class="fa-solid fa-envelope"></i>
        </div>
        <div class="otp-title">Enter OTP</div>
        <div class="otp-subtitle">We sent a code to <span>@Model.Email</span></div>
        <form method="post" asp-action="VerifyForgotPasswordOtp" asp-controller="Account" autocomplete="off" id="forgotOtpForm">
            <div class="otp-inputs">
                @for (int i = 0; i < 6; i++)
                {
                    <input type="password" maxlength="1" class="otp-input" name="OtpBox" inputmode="numeric" pattern="[0-9]*" autocomplete="off" />
                }
            </div>
            <input type="hidden" asp-for="Email" />
            <input type="hidden" asp-for="Otp" id="ForgotOtpHidden" />
            <button class="otp-btn" type="submit">Continue</button>
        </form>
        <div class="otp-resend">
            Didn't receive the email? <a href="#" id="resendForgotOtpLink">Click to resend</a>
        </div>
        <form method="get" asp-action="ForgotPassword" asp-controller="Account">
            <button type="submit" class="otp-back-btn">Back</button>
        </form>
    </div>
</div>
@section scripts {
    <script>
        // OTP Input Handling
        const otpInputs = document.querySelectorAll('.otp-input');
        const hiddenOtpInput = document.getElementById('ForgotOtpHidden');

        otpInputs.forEach((input, index) => {
            input.addEventListener('input', function(e) {
                const value = e.target.value;
                if (value.length === 1) {
                    if (index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                }
            });

            input.addEventListener('keydown', function(e) {
                if (e.key === 'Backspace' && e.target.value === '' && index > 0) {
                    otpInputs[index - 1].focus();
                }
            });
        });

        // Update hidden input when OTP changes
        function updateHiddenOtp() {
            const otpValue = Array.from(otpInputs).map(input => input.value).join('');
            hiddenOtpInput.value = otpValue;
        }

        otpInputs.forEach(input => {
            input.addEventListener('input', updateHiddenOtp);
        });

        // Resend OTP functionality
        document.getElementById('resendForgotOtpLink').addEventListener('click', function(e) {
            e.preventDefault();
            const email = '@Model.Email';
            
            fetch('@Url.Action("ResendForgotPasswordOtp", "Account")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ email: email })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    toastr.success('New OTP has been sent to your email address.');
                } else {
                    toastr.error('Failed to resend OTP. Please try again.');
                }
            })
            .catch(error => {
                toastr.error('An error occurred. Please try again.');
            });
        });

        // Form submission
        document.getElementById('forgotOtpForm').addEventListener('submit', function(e) {
            updateHiddenOtp();
        });

        // Error and success message handling
        var errorMessage = '@TempData["ErrorMessage"]';
        var successMessage = '@TempData["SuccessMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }
        if (successMessage) {
            toastr.success(successMessage);
        }
    </script>
} 