@model Readiculous.Services.ServiceModels.GenreBooksViewModel

@{
    ViewData["Title"] = Model.Genre.Name;
    var books = Model.Books ?? new List<Readiculous.Services.ServiceModels.BookListItemViewModel>();
    int totalSlots = 10;
    int booksPerRow = 5;
    int rows = 2;
}

<link rel="stylesheet" href="~/css/genre.css" />

<div class="genre-main-container">
    <div class="mb-3">
        <a href="@Url.Action("GenreMasterScreen", "GenreMaster")" class="btn genre-btn-pink">Return to Genre List</a>
    </div>

    <div class="genre-card sleek-search mb-4 genre-details-search">
        <form method="get" asp-action="GenreViewModal" class="genre-search-bar-container genre-details-search-form">
            <input type="hidden" name="id" value="@Model.Genre.GenreId" />
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85zm-5.242 1.106a5 5 0 1 1 0-10 5 5 0 0 1 0 10z" />
            </svg>
            <input type="text" name="bookSearch" class="genre-search-bar-input" placeholder="Book Search..." value="@ViewData["BookSearch"]" autocomplete="off" />
        </form>
    </div>

    <div class="genre-card mb-4 text-center">
        <h2 class="genre-header mb-0">BOOK IN THIS GENRE</h2>
    </div>
    @for (int row = 0; row < rows; row++)
    {
        <div class="genre-books-row">
            @for (int col = 0; col < booksPerRow; col++)
            {
                int idx = row * booksPerRow + col;
                if (idx < books.Count)
                {
                    var book = books[idx];
                    <div class="genre-book-card">
                        <div class="genre-book-cover">
                            @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                            {
                                <img src="@book.CoverImageUrl" alt="@book.Title" />
                            }
                            else
                            {
                                <div class="cover-placeholder">no image available</div>
                            }
                        </div>
                        <div class="genre-book-title">@book.Title</div>
                        <div class="genre-book-meta">@book.Author, @book.PublicationYear</div>
                    </div>
                }
                else
                {
                    <div class="genre-book-card empty"></div>
                }
            }
        </div>
    }

    @await Html.PartialAsync("PaginationGenreView", Model)
</div>

@section Scripts {
    <script src="~/js/paginationGenreView.js"></script>
}
