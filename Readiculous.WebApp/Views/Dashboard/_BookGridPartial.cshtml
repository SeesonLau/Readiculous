@model List<Readiculous.Services.ServiceModels.BookListItemViewModel>

<div class="row row-cols-2 row-cols-md-5 g-4">
    @foreach (var book in Model)
    {
        var filledStars = (int)Math.Floor((double)book.AverageRating);
        bool hasReview = book.AverageRating > 0;

        <div class="col book-card-wrapper" data-genres="@string.Join(",", book.Genres)">
            <a href="@Url.Action("BookDetailScreen", "Dashboard", new { id = book.BookId })" class="text-card-link no-underline">
                <div class="card h-100 text-center">
                    <img src="@(book.CoverImageUrl ?? "/img/placeholder.png")" class="card-img-top" alt="@book.Title" />
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text text-muted">@book.Author</p>
                        <div class="card-rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <span class="star @(i <= filledStars && hasReview ? "filled-star" : "empty-star")">&#9733;</span>
                            }
                            <span class="rating-value @(hasReview ? "text-warning" : "text-secondary")">
                                @book.AverageRating.ToString("0.0")
                            </span>
                        </div>
                        <p class="small text-muted mb-0">(@book.TotalReviews reviews)</p>
                    </div>
                </div>
            </a>
        </div>
    }
</div>
