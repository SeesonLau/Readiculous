@model Readiculous.Services.ServiceModels.BookDetailsViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.Title;

    string role = ViewBag.UserRole as string;
    bool isAdmin = role == "Admin";
    bool isReviewer = role == "Reviewer";

    string userId = ViewBag.UserId as string ?? "";
    string userName = ViewBag.UserName as string ?? "";
    string userEmail = ViewBag.UserEmail as string ?? "";
    int totalReviews = Model.Reviews?.Count ?? 0;
}

<div class="container py-5">
    <div class="row g-3">
        <!-- Left Column -->
        <div class="col-md-4 d-flex flex-column align-items-center">
            <div class="book-card text-center mb-3">
                <img src="@(string.IsNullOrEmpty(Model.CoverImageUrl) ? "/img/placeholder.png" : Model.CoverImageUrl)"
                     class="book-image"
                     alt="@Model.Title" />
            </div>
            @if (!isAdmin)
            {
                if (User.Identity.IsAuthenticated && isReviewer)
                {
                    <button class="btn btn-outline-primary mb-2" onclick="showFavoriteMessage()">
                        + Add to Favorites
                    </button>
                }
                else
                {
                    <button class="btn btn-secondary mb-2"
                            data-bs-toggle="modal"
                            data-bs-target="#requiredLoginModal">
                        + Add to Favorites
                    </button>
                }
            }
            <div id="favoriteAlert"
                 class="alert alert-success alert-dismissible fade show d-none text-center"
                 role="alert">
                ✅ Added to your favorite books!
                <button type="button" class="btn-close" onclick="hideFavoriteMessage()"></button>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-md-8">
            <h2>@Model.Title</h2>
            <p class="text-muted">by <strong>@Model.Author</strong></p>
            <p><strong>Genre:</strong> @(Model.Genres?.Any() == true ? string.Join(", ", Model.Genres) : "Unknown")</p>
            <p><strong>Average Rating:</strong> ⭐ @Model.AverageRating</p>

            <div class="card mt-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Description</h5>
                    <p class="card-text">@Model.Description</p>
                </div>
            </div>

            <div class="card review-card mt-4 shadow-sm">
                <div class="card-body d-flex flex-column h-100">
                    <div class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-2">
                        <h5 class="mb-0">Reviews (<span id="review-count">@totalReviews</span>)</h5>
                        @if (User.Identity.IsAuthenticated && isReviewer)
                        {
                            <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#addReviewModal">
                                + Add Review
                            </button>
                        }
                    </div>
                    <div class="overflow-auto" id="reviews-container">
                        @if (Model.Reviews?.Any() == true)
                        {
                            foreach (var review in Model.Reviews)
                            {
                                <div class="card mb-3 shadow-sm">
                                    <div class="card-body d-flex align-items-start gap-3">
                                        <img src="/img/default-profile.png" class="rounded-circle" style="width:40px;height:40px;" />
                                        <div>
                                            <h6 class="mb-1">@review.Reviewer</h6>
                                            <div class="mb-1">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="bi @(i <= (int)review.Rating ? "bi-star-fill text-warning" : "bi-star text-muted")"></i>
                                                }
                                                <span class="text-muted small">(@review.Rating.ToString("0.0"))</span>
                                            </div>
                                            <p class="mb-1">@review.Comment</p>
                                            <small class="text-muted">@review.CreatedTime.ToString("MMMM dd, yyyy")</small>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted" id="no-reviews-text">No reviews yet.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (isReviewer)
{
    <div class="modal fade" id="addReviewModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                @await Html.PartialAsync("~/Views/Shared/_AddReviewModal.cshtml", new Readiculous.Services.ServiceModels.ReviewViewModel
       {
           BookId = Model.BookId,
           UserId = userId,
           UserName = userName,
           Email = userEmail,
           BookTitle = Model.Title
       })
            </div>
        </div>
    </div>
}

@await Html.PartialAsync("~/Views/Shared/_RequiredModal.cshtml")

<link href="~/css/bookDetail.css" rel="stylesheet" />
<script src="~/js/bookDetail.js"></script>
