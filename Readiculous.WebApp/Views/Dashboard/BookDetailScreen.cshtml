@model Readiculous.Services.ServiceModels.BookDetailsViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.Title;

    bool isReviewer = ViewBag.IsReviewer ?? false;
    string userId = ViewBag.UserId as string ?? "";
    string userName = ViewBag.UserName as string ?? "";
    string userEmail = ViewBag.UserEmail as string ?? "";
    int totalReviews = ViewData["TotalReviews"] as int? ?? Model.Reviews?.Count ?? 0;
}

<div class="container py-5">
    <div class="row g-3">
        <!-- LEFT COLUMN -->
        <div class="col-md-4 d-flex flex-column align-items-center">
            <div class="book-card text-center mb-3">
                <img src="@(string.IsNullOrEmpty(Model.CoverImageUrl) ? "/img/placeholder.png" : Model.CoverImageUrl)"
                     class="book-image"
                     alt="@Model.Title" />
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                if (isReviewer)
                {
                    <button class="btn btn-outline-primary mb-2"
                            onclick="showFavoriteMessage()">
                        + Add to Favorites
                    </button>
                }
                else
                {
                    <button class="btn btn-secondary mb-2"
                            data-bs-toggle="modal"
                            data-bs-target="#requiredLoginModal">
                        + Add to Favorites
                    </button>
                }
            }
            else
            {
                <button class="btn btn-secondary mb-2"
                        data-bs-toggle="modal"
                        data-bs-target="#requiredLoginModal">
                    + Add to Favorites
                </button>
            }

            <div id="favoriteAlert"
                 class="alert alert-success alert-dismissible fade show d-none text-center"
                 role="alert"
                 style="width: 90%;">
                ✅ Added to your favorite books!
                <button type="button"
                        class="btn-close"
                        onclick="hideFavoriteMessage()">
                </button>
            </div>
        </div>

        <!-- RIGHT COLUMN -->
        <div class="col-md-8">
            <h2>@Model.Title</h2>
            <p class="text-muted">by <strong>@Model.Author</strong></p>
            <p>
                <strong>Genre:</strong>
                @(Model.Genres != null && Model.Genres.Any()
                    ? string.Join(", ", Model.Genres)
                    : "Unknown")
            </p>
            <p>
                <strong>Series:</strong>
                @(Model.SeriesNumber > 0
                    ? $"Book {Model.SeriesNumber}"
                    : "Standalone")
            </p>
            <p><strong>Publisher:</strong> @Model.Publisher</p>
            <p><strong>Published:</strong> @Model.PublicationYear</p>
            <p>
                <strong>Added on:</strong>
                @Model.CreatedTime.ToString("MMMM dd, yyyy")
            </p>
            <p><strong>Average Rating:</strong> ⭐ @Model.AverageRating</p>

            <div class="card mt-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Description</h5>
                    <p class="card-text">@Model.Description</p>
                </div>
            </div>

            <div class="card review-card mt-4 shadow-sm">
                <div class="card-body d-flex flex-column h-100">
                    <div class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-2">
                        <h5 class="mb-0">
                            Reviews
                            (<span id="review-count">@totalReviews</span>)
                        </h5>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (isReviewer)
                            {
                                <button class="btn btn-sm btn-primary"
                                        data-bs-toggle="modal"
                                        data-bs-target="#addReviewModal">
                                    + Add Review
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-secondary"
                                        data-bs-toggle="modal"
                                        data-bs-target="#requiredLoginModal">
                                    + Add Review
                                </button>
                            }
                        }
                        else
                        {
                            <button class="btn btn-sm btn-secondary"
                                    data-bs-toggle="modal"
                                    data-bs-target="#requiredLoginModal">
                                + Add Review
                            </button>
                        }
                    </div>

                    <div class="overflow-auto" id="reviews-container">
                        @if (Model.Reviews != null && Model.Reviews.Any())
                        {
                            @foreach (var review in Model.Reviews)
                            {
                                <div class="card mb-3 shadow-sm">
                                    <div class="card-body">
                                        <h6 class="card-title">
                                            @review.Reviewer —
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="bi @(i <= (int)review.Rating
                                                        ? "bi-star-fill text-warning"
                                                        : "bi-star text-muted")"></i>
                                            }
                                        </h6>
                                        <p class="card-text">@review.Comment</p>
                                        <p class="card-subtitle text-muted small">
                                            @review.CreatedTime.ToString("MMMM dd, yyyy")
                                        </p>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted mb-0 mt-3" id="no-reviews-text">No reviews yet.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reviewer “Add Review” Modal -->
@if (isReviewer)
{
    <div class="modal fade" id="addReviewModal" tabindex="-1" aria-labelledby="addReviewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                @await Html.PartialAsync("~/Views/Shared/_AddReviewModal.cshtml",
                         new Readiculous.Services.ServiceModels.ReviewViewModel
            {
                BookId = Model.BookId,
                UserId = userId,
                UserName = userName,
                Email = userEmail,
                BookTitle = Model.Title
            })
            </div>
        </div>
    </div>
}

<!-- Required Login/Register Modal -->
@await Html.PartialAsync("~/Views/Shared/_RequiredModal.cshtml")

@section Scripts {
    
        <script src="~/js/bookDetail.js"></script>     
}
@section Styles{
        <link href="~/css/book-detail.css" rel="stylesheet" />
} 



