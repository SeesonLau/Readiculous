@model Readiculous.Services.ServiceModels.UserDashboardViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Dashboard";

    var sortedNewBooks = Model.NewBooks?.OrderByDescending(b => b.CreatedTime).ToList() ?? new();
    var sortedTopBooks = Model.TopBooks?.OrderByDescending(b => b.AverageRating).ToList() ?? new();
    string keyword = ViewBag.Keyword as string ?? "";

    // Combine all books (new, top, favorite) and remove duplicates by BookId
    var allBooks = (Model.NewBooks ?? new List<Readiculous.Services.ServiceModels.BookListItemViewModel>())
        .Concat(Model.TopBooks ?? new List<Readiculous.Services.ServiceModels.BookListItemViewModel>())
        .Where(b => !string.IsNullOrWhiteSpace(b.Title))
        .GroupBy(b => b.BookId)
        .Select(g => g.First())
        .ToList();

    var dashboardJson = allBooks
        .Select(b => new
        {
            id = b.BookId,
            title = b.Title,
            cover = string.IsNullOrWhiteSpace(b.CoverImageUrl) ? "/img/placeholder.png" : b.CoverImageUrl,
            createdTime = b.CreatedTime.ToString("o")
        });
}

<input type="hidden" id="booksJsonDashboard" value='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(dashboardJson))' />

<div class="container py-4">
    <!-- Search Bar with Autocomplete -->
    <div class="row mb-4 align-items-end position-relative">
        <div class="col-lg-9">
            <label for="searchDashboard" class="form-label">Search Books</label>
            <form method="get" asp-action="ViewNewBooks" asp-controller="Dashboard" class="d-flex position-relative">
                <input type="text"
                       id="searchDashboard"
                       name="keyword"
                       value="@keyword"
                       class="form-control me-2"
                       autocomplete="off"
                       placeholder="🔍 Search books..." />
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
            <ul id="searchSuggestions"
                class="list-group position-absolute w-100 mt-1 shadow"
                style="z-index: 999;">
            </ul>
        </div>
    </div>

    <!-- NEW BOOKS Section -->
    <div class="row mb-5">
        <div class="col-lg-9">
            <section class="h-100">
                <div class="section-box p-3 h-100">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="section-title mb-0">NEW BOOKS</h2>
                        <a class="view-more-link" href="@Url.Action("ViewNewBooks", "Dashboard")">View More</a>
                    </div>
                    <div class="row row-cols-5 g-4">
                        @if (sortedNewBooks.Any())
                        {
                            foreach (var book in sortedNewBooks.Take(5))
                            {
                                <div class="col">
                                    <div class="book-card h-100 text-center">
                                        <a href="@Url.Action("BookDetailScreen", "Dashboard", new { id = book.BookId })" class="text-decoration-none">
                                            <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/img/placeholder.png" : book.CoverImageUrl)"
                                                 class="book-image mb-3 img-fluid"
                                                 alt="@book.Title"
                                                 style="height: 220px; object-fit: contain;" />
                                            <h6 class="book-title mb-1">@book.Title</h6>
                                            <p class="book-author mb-1 small">@book.Author, @book.PublicationYear</p>
                                            <div class="book-rating mb-0">
                                                @{
                                                    int filledStars = (int)Math.Floor((double)book.AverageRating);
                                                    bool hasRating = book.AverageRating > 0.0m;
                                                }
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <span class="star-icon @(i <= filledStars && hasRating ? "star-filled" : "star-empty")">☆</span>
                                                }
                                                <span class="rating-value d-block @(hasRating ? "text-warning" : "text-secondary")">
                                                    (@book.AverageRating.ToString("0.0"))
                                                </span>
                                                <span class="review-count small text-muted d-block">
                                                    (@(book.TotalReviews) review@(book.TotalReviews == 1 ? "" : "s"))
                                                </span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-center text-muted">No new books available.</p>
                        }
                    </div>
                </div>
            </section>
        </div>

        <!-- FAVORITE BOOKS -->
        <div class="col-lg-3">
            <section class="h-100">
                <div class="section-box p-3 h-100 d-flex flex-column">
                    <div class="favorite-cat-icon text-center mb-3 mt-2">
                        <img src="~/img/cats.png" alt="Cat Icon" style="max-width: 80%; height: auto;" />
                    </div>
                    <h5 class="text-center mb-3">Your Favorite Books</h5>
                    <div class="favorite-book-list w-100 flex-grow-1">
                        @if (Model.FavoriteBooks != null && Model.FavoriteBooks.Any())
                        {
                            <ul class="list-unstyled">
                                @foreach (var book in Model.FavoriteBooks)
                                {
                                    <li class="mb-2">
                                        <a href="@Url.Action("BookDetailScreen", "Dashboard", new { id = book.BookId })"
                                           class="text-decoration-none small">
                                            @book.Title
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-center text-muted mt-3">You have no favorite books yet.</p>
                        }
                    </div>
                </div>
            </section>
        </div>
    </div>

    <!-- TOP BOOKS -->
    <div class="row mb-5">
        <div class="col-lg-9">
            <section>
                <div class="section-box p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="section-title mb-0">TOP BOOKS</h2>
                        <a class="view-more-link" href="@Url.Action("ViewTopBooks", "Dashboard")">View More</a>
                    </div>
                    <div class="row row-cols-5 g-4">
                        @if (sortedTopBooks.Any())
                        {
                            foreach (var book in sortedTopBooks.Take(5))
                            {
                                <div class="col">
                                    <div class="book-card h-100 text-center">
                                        <a href="@Url.Action("BookDetailScreen", "Dashboard", new { id = book.BookId })" class="text-decoration-none">
                                            <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/img/placeholder.png" : book.CoverImageUrl)"
                                                 class="book-image mb-3 img-fluid"
                                                 alt="@book.Title"
                                                 style="height: 220px; object-fit: contain;" />
                                            <h6 class="book-title mb-1">@book.Title</h6>
                                            <p class="book-author mb-1 small">@book.Author, @book.PublicationYear</p>
                                            <div class="book-rating mb-0">
                                                @{
                                                    int filledStars = (int)Math.Floor((double)book.AverageRating);
                                                    bool hasRating = book.AverageRating > 0.0m;
                                                }
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <span class="star-icon @(i <= filledStars && hasRating ? "star-filled" : "star-empty")">☆</span>
                                                }
                                                <span class="rating-value d-block @(hasRating ? "text-warning" : "text-secondary")">
                                                    (@book.AverageRating.ToString("0.0"))
                                                </span>
                                                <span class="review-count small text-muted d-block">
                                                    (@(book.TotalReviews) review@(book.TotalReviews == 1 ? "" : "s"))
                                                </span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-center text-muted">No top-rated books available.</p>
                        }
                    </div>
                </div>
            </section>
        </div>
        <div class="col-lg-3">
            <!-- Empty column for layout balance -->
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard-screen.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/js/searchBar.js" asp-append-version="true"></script>
}
