@using Readiculous.Services.ServiceModels
@model List<BookListItemViewModel>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Genres";
    ViewBag.ShowReviewerNav = true;

    var allGenres = ViewBag.AllGenres as List<string> ?? new List<string>();
    var selectedGenres = ViewBag.SelectedGenres as List<string> ?? new List<string>();

    var title = selectedGenres.Count == 1
        ? selectedGenres[0].ToUpper()
        : selectedGenres.Count > 1
            ? string.Join(", ", selectedGenres).ToUpper()
            : "";
}

<div class="container py-4">

    <!-- Header: Dropdown + Back -->
    <div class="d-flex justify-content-between flex-wrap align-items-end mb-4">
        <!-- Genre Dropdown -->
        <div class="me-3" style="flex-grow: 1; max-width: 400px;">
            <form id="genreForm">
                <input type="hidden" name="selectedGenres" id="selectedGenresInput" value="@string.Join(",", selectedGenres)" />
                <label class="fw-bold mb-2">Explore by Genre</label>
                <div class="position-relative">
                    <button type="button" class="form-select" id="genreToggle">
                        @(selectedGenres.Any() ? string.Join(", ", selectedGenres) : "Select Genres…")
                    </button>
                    <div class="dropdown-menu p-3 mt-1 w-100" id="genreMenu">
                        <div class="row">
                            @foreach (var genre in allGenres)
                            {
                                var isChecked = selectedGenres.Contains(genre);
                                <div class="col-6 col-sm-4">
                                    <div class="form-check">
                                        <input class="form-check-input genre-checkbox" type="checkbox"
                                               id="chk_@genre" value="@genre" @(isChecked ? "checked" : "") />
                                        <label class="form-check-label" for="chk_@genre">@genre</label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Back to Dashboard Button -->
        <div class="mt-4 mt-md-0">
            <a href="@Url.Action("DashboardScreen", "Dashboard")" class="btn btn-outline-secondary">
                ← Back to Dashboard
            </a>
        </div>
    </div>

    <!-- Genre Title -->
    @if (!string.IsNullOrEmpty(title))
    {
        <div class="text-center mt-2 mb-4">
            <h4 class="display-title-highlight genre-title-bordered stroke-text">@title</h4>
        </div>
    }

    <!-- Book Grid Container -->
    <div id="bookGridContainer">
        @await Html.PartialAsync("_BookGridPartial", Model)
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard-screen.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/genre-screen.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/js/genre-screen.js" asp-append-version="true"></script>
}
