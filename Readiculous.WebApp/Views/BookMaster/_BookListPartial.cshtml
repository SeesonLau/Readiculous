@model IEnumerable<Readiculous.Services.ServiceModels.BookListItemViewModel>

<table class="book-table table-auto-row">
    <thead>
        <tr class="text-center">
            <th rowspan="2" class="text-center align-middle cover-image-cell">Cover</th>
            <th rowspan="2" class="text-center align-middle">Title</th>
            <th rowspan="2" class="text-center align-middle">Author</th>
            <th rowspan="2" class="text-center align-middle">Genres</th>
            <th rowspan="2" class="text-center align-middle">Series#</th>
            <th rowspan="2" class="text-center align-middle">Rating</th>
            <th colspan="2" class="text-center align-middle">Updated</th>
            <th rowspan="2" class="text-center align-middle">Actions</th>
        </tr>
        <tr class="text-center">
            <th class="text-center">Date</th>
            <th class="text-center">Time</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="cover-image-cell">
                    <div class="cover-image-container">
                        @if (!string.IsNullOrEmpty(item.CoverImageUrl))
                        {
                            <img src="@item.CoverImageUrl" alt="@item.Title cover" class="cover-image"
                                 loading="lazy" />
                        }
                        else
                        {
                            <div class="cover-image-placeholder">
                                <i class="fas fa-book-open"></i>
                            </div>
                        }
                    </div>
                </td>
                <td class="text-center align-middle table-cell-truncate title-cell" title="@item.Title">
                    <span class="truncate-cell truncate-title">@Html.DisplayFor(modelItem => item.Title)</span>
                </td>
                <td class="text-center align-middle table-cell-truncate author-cell" title="@item.Author">
                    <span class="truncate-cell truncate-author">@Html.DisplayFor(modelItem => item.Author)</span>
                </td>
                <td class="text-center align-middle">
                    <div class="genre-badges-container">
                        @if (item.Genres.Any())
                        {
                            foreach (var genre in item.Genres.OrderBy(g => g))
                            {
                                <span class="genre-badge" title="@genre">@genre</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">-</span>
                        }
                    </div>
                </td>
                <td class="text-center align-middle">@Html.DisplayFor(modelItem => item.SeriesNumber)</td>
                <td class="text-center align-middle">@item.AverageRating.ToString("0.0")</td>
                <td class="text-center align-middle" style="white-space: nowrap;">@item.UpdatedTime.ToString("yyyy MMMM dd")</td>
                <td class="text-center align-middle" style="white-space: nowrap;">@item.UpdatedTime.ToString("h:mm tt")</td>
                <td class="text-center align-middle">
                    <div class="action-buttons">
                        <button class="btn-action btn-view btn-view-book" data-bookid="@item.BookId" title="View">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn-action btn-edit btn-edit-book" data-bookid="@item.BookId" title="Edit">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn-action btn-delete btn-delete-book" data-bookid="@item.BookId" data-bookname="@item.Title" title="Delete">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        }

        <tr id="emptyStateRow" style="display: none;">
            <td colspan="9" class="text-center text-muted empty-state">No books found matching your criteria.</td>
         </tr>

        @if (!Model.Any())
        {
            <tr>
                <td colspan="9" class="text-center text-muted empty-state">No books found matching your criteria.</td>
            </tr>
        }
    </tbody>
</table>
