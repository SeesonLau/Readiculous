@model IEnumerable<Readiculous.Services.ServiceModels.BookListItemViewModel>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr class="text-center">
            <th rowspan="2" class="text-center align-middle" >Cover</th>
            <th rowspan ="2" class="text-center align-middle">@Html.DisplayNameFor(model => model.First().Title)</th>
            <th rowspan="2" class="text-center align-middle">@Html.DisplayNameFor(model => model.First().Author)</th>
            <th rowspan="2" class="text-center align-middle">Genres</th>
            <th rowspan="2" class="text-center align-middle">@Html.DisplayNameFor(model => model.First().SeriesNumber)</th>
            <th rowspan="2" class="text-center align-middle"> @Html.DisplayNameFor(model => model.First().AverageRating)</th>
            <th colspan="2" class="text-center align-middle">@Html.DisplayNameFor(model => model.First().UpdatedTime)</th>
            <th rowspan="2" class="text-center align-middle">Actions</th>
        </tr>
        <tr class="text-center">
            <th class="text-center">Date</th>
            <th class="text-center">Time</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.CoverImageUrl))
                    {
                        <img src="@item.CoverImageUrl" alt="Cover" width="50" height="75" />
                    }
                    else
                    {
                        <span class="text-muted">No Image</span>
                    }
                </td>
                <td class="text-center align-middle">@Html.DisplayFor(modelItem => item.Title)</td>
                <td class="text-center align-middle">@Html.DisplayFor(modelItem => item.Author)</td>
                <td class ="text-center align-middle">
                    @if (item.Genres.Any())
                    {
                        foreach (var genre in item.Genres.OrderBy(g => g))
                        {
                            <span class="badge bg-primary me-1">@genre</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">No genres</span>
                    }
                </td>
                <td class="text-center align-middle">@Html.DisplayFor(modelItem => item.SeriesNumber)</td>
                <td class="text-center align-middle">@item.AverageRating.ToString("0.0")</td>
                <td class="text-center align-middle">@item.UpdatedTime.ToString("yyyy MMMM dd")</td>
                <td class="text-center align-middle">@item.UpdatedTime.ToString("h:mm tt")</td>
                <td class="text-center align-middle">
                    <button class="btn btn-primary btn-sm btn-edit-book" data-bookid="@item.BookId">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-info btn-sm btn-view-book" data-bookid="@item.BookId">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn btn-danger btn-sm btn-delete-book" data-bookid="@item.BookId"data-bookname="@item.Title">
                        <i class="fas fa-trash"></i>
                    </button>
                </td>
            </tr>
        }

        @if (!Model.Any())
        {
            <tr>
                <td colspan="9" class="text-center text-muted">No books found matching your criteria.</td>
            </tr>
        }
    </tbody>
</table>
